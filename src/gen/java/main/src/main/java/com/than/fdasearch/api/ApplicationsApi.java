/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.than.fdasearch.api;

import com.than.fdasearch.api.model.ApplicationEntry;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-08-02T10:15:18.406887400+03:00[Europe/Bucharest]")
@Validated
@Api(value = "applications", description = "the applications API")
public interface ApplicationsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /applications : Create a local entry for an application
     *
     * @param applicationEntry  (required)
     * @return successful operation (status code 200)
     *         or Server error (status code 500)
     */
    @ApiOperation(value = "Create a local entry for an application", nickname = "saveApplication", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation"),
        @ApiResponse(code = 500, message = "Server error") })
    @PostMapping(
        value = "/applications",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> saveApplication(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ApplicationEntry applicationEntry) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /applications : View all locally saved applications
     *
     * @return successful operation (status code 200)
     *         or Server error (status code 500)
     */
    @ApiOperation(value = "View all locally saved applications", nickname = "viewSavedApplications", notes = "", response = ApplicationEntry.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ApplicationEntry.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Server error") })
    @GetMapping(
        value = "/applications",
        produces = { "application/json" }
    )
    default ResponseEntity<List<ApplicationEntry>> viewSavedApplications() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"productNumbers\" : [ 0, 0 ], \"manufacturerName\" : \"manufacturerName\", \"substanceName\" : \"substanceName\", \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
